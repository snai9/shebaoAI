import win.ui;
import fonts.fontAwesome;
import inet.http;
/*DSG{{*/
var mainForm = win.form(text="社保知识查询助手";right=759;bottom=607;max=false)
mainForm.add(
btnClear={cls="button";text="清除";left=130;top=404;right=233;bottom=434;flat=1;z=1};
btnCopy={cls="button";text="复制";left=24;top=404;right=127;bottom=434;flat=1;z=2};
btnSend={cls="button";text="发送";left=623;top=550;right=727;bottom=578;flat=1;font=LOGFONT(h=-14);tabstop=1;z=4};
chkFix={cls="checkbox";text="启用知识库";left=407;top=556;right=496;bottom=575;ah=1;aw=1;bgcolor=16777215;checked=1;z=5};
chkNet={cls="checkbox";text="启用互联网";left=511;top=556;right=600;bottom=575;ah=1;aw=1;bgcolor=16777215;disabled=1;z=7};
editPrompt={cls="richedit";left=11;top=479;right=747;bottom=587;bgcolor=16777215;clip=1;edge=1;multiline=1;vscroll=1;wrap=1;z=8};
static={cls="static";text="CTRL+回车键发送        直接按回车键换行        取消【启用知识库】可使用预训练知识        勾选【启用互联网】可连网增强检索";left=14;top=446;right=749;bottom=475;align="center";center=1;notify=1;transparent=1;z=6};
wndBrowser={cls="richedit";left=12;top=12;right=748;bottom=443;clip=1;multiline=1;readonly=1;vscroll=1;wrap=1;z=3}
)
/*}}*/

//创建显示聊天消虑的 Web 浏览器窗口
import web.form.chat;
// 获取当前日期和时间
var now = time.now();

// 提取年、月、日
var year = now.year;
var month = now.month;
var day = now.day;


var search_prompt = /****************
# 以下是来自互联网的信息：
{search_result}

# 当前日期: {current_date}

# 要求：
- 根据最新发布的信息回答用户问题
- 回答时注明日期并按日期排序
- 当回答引用了参考信息时,在参考消中找到{ref_序号}对应的{media}的具体值来标注来源。
- 重申，不要直接显示{ref_序号}，按照通常的引用格式给出其对应的实际的参考消息来源
- 回答完成后必须表明信息数据是互联网还是内部知识或文档


****************/
// 格式化日期字符串,因为下面的当前日期模型中有现成的变量，这里不需要了，但方法很重要，得掌握
//var dateString = string.format("%04d-%02d-%02d", year, month, day);
// 使用 string.replace 替换 2024-XX-XX 为 dateString
//search_prompt = string.replace(search_prompt, "2024-XX-XX", dateString);

// 输出替换后的字符串
//print(search_prompt);



var config = {
				key = string.getenv("ZHIPUAI_API_KEY") || "bc87929ac614eefc129a2bbe1ddbbec8.TggSr7H819Ta1LVV";
				url = "https://open.bigmodel.cn/api/paas/v4";//接口地址
				model = "glm-4-flash";//模型名称首字符为 @ 则使用 Anthropic 接口
				temperature = 0.1;//0.1-0.3适合稳定输出场景
				top_p = 0.5;
				//maxTokens = 4096;//最大回复长度
				msgLimit = 30;
				tools= {
				 {
					type = "retrieval"; 
					retrieval = {knowledge_id = "1871063437791133696"}
					};
				 
			  }
	};
// 处理 chkFix 状态变化
mainForm.chkFix.oncommand = function(id, event) {
    if (mainForm.chkFix.checked) {
        mainForm.chkNet.checked = false; // 如果 chkFix 是 true,就切换chkNet为 false
    	
        // 如果 chkFix 被选中,恢复 config.tools 的第一个元素为 retrieval 类型
        config.tools = {
            {
            type = "retrieval";
            retrieval = { knowledge_id = "1871063437791133696" }
            }
        };
        
    } else {
        //取消chkFix时如果按住CTRL键则可解除chkNet的禁用状态
        if(key.getState("CTRL")){ 
        	 mainForm.chkNet.disabled = false;
        }
        // 如果 chkFix 取消选中,将 config.tools 修改为空；
        config.tools = null;
        for(k,v in config){ 
				if(v=="")config[k] = null;}
        
    }
};

// 处理 chkNet 状态变化
mainForm.chkNet.oncommand = function(id, event) {
	//三个条件一个都满足不了就不能勾选上
	if (!string.match(mainForm.editPrompt.text, "<9>|<玖>") &&
    !key.getState("ESC")) {
    mainForm.chkNet.checked = false;
}
    if (mainForm.chkNet.checked) {
        mainForm.chkFix.checked = false; // 如果 chkNet 是 true,就切换chkFix为 false
    	
        // 如果 chkNet 被选中,恢复 config.tools 的第一个元素为 web_search 类型
        config.tools = {
            {
            type = "web_search";
            web_search = {
                enable = true;
                //search_query = "社保 | 医疗";//限制搜索内容，提高搜索精度 
                search_result = true;
                search_prompt = search_prompt
                }
            }
        };
        mainForm.msgbox(config)
    } else {
        // 如果 chkNet 取消选中,将 config.tools修改为 null
        config.tools = null;
        for(k,v in config){ 
				if(v=="")config[k] = null;}
         mainForm.msgbox(config)
    }
};

var wb = web.form.chat(mainForm.wndBrowser);

var systemPrompt = /****************
## 角色

你是 社保卡专家，了解所有的社保卡业务。

## 任务

1、用户导向功能介绍
一站式解决您的社保卡疑惑，提供全面的社保知识解答，让您的社保查询更便捷、更智能。

2、操作人员业务指导
为操作人员提供详尽的业务流程指导，确保社保服务的标准化和高效化，提升业务处理能力。

3、社保卡工作人员专业支持
为社保卡工作人员提供专业的业务支持和政策解读，助力工作人员更好地服务社会大众。

## 要求

回答完成后必须表明信息的来源，是内部知识库、大模型知识还是互联网
****************/



//清除上下文
var resetMessages = function(){
	
	wb.clear();
	
	var p = systemPrompt;
	
	
	
	//输入系统提示词
	wb.system(  p );
}

resetMessages();

//必须先导入此接口，细节请参考 IRichEditOleCallback 接口文档。
import com.interface.IRichEditOleCallback;

mainForm.editPrompt.oleCallback(


    GetDragDropEffect = function(drag,grfKeyState,effect){

        /*所有 COM 实现的原生接口，第一个返回值为 0 表示执行成功。
        返回值 2 指定拖放效果（effect），不指定则鼠标指针显示禁止拖放图标。*/
        return 0,1/*_DROPEFFECT_COPY*/
    }

    QueryAcceptData = function(ptrDataObj,format,reco,really,hMetaPict){

        /*really 表示放开鼠标，接收拖放数据*/
        if(really){

            /*用法请参考 com.interface.IDataObject 库参考文档*/
            var dataObj = com.interface.IDataObject(ptrDataObj);// 获取拖放数据对象
            var f = dataObj.getDropFile(); // 获取拖放文件
            
			//var filePath=f[1]; //文件完整路径
			var apiKey = config.key;
			// 强制选中 chkFix 并更新 knowledge_id
			/*
if (!mainForm.chkFix.checked) {
    			mainForm.chkFix.checked = true; // 如果 chkFix 不是 true,先切换为 true
    			mainForm.chkFix.oncommand();//手动调用 chkFix.oncommand 事件,满足选中状态的触发条件
			}
			config.tools[1].retrieval.knowledge_id = "1876247480975446016";
*/
			// 更新 knowledge_id
			config.tools = {
            {
            type = "retrieval";
            retrieval = { knowledge_id = "1876247480975446016" }
            }
        };
			
			
			


			//导入上传知识的库 方法1
			//import uploadzs; //导入上传知识的库(名字空间）
			//uploadzs.uploadFile(filePath, apiKey); //调用uploadFile函数上传
			
			//导入上传知识的库 方法2
			//import uploadzsc; //导入上传知识的库(类）
			//var uploader = uploadzsc(filePath,apiKey);//实例化时传参 
			//uploader.uploadFile(); //调用uploadFile函数上传
            
            //导入上传知识的库 方法3
			import uploadzsd; //导入上传知识的库(多个文件）
			
			var uploader = uploadzsd(f,apiKey);//实例化时传参，使用uploadzsd可同时拖入多个文件上传
			uploader.uploadFiles(); //调用uploadFile函数上传
            //var txt = dataObj.getText();// 获取拖放文本
           	//win.msgbox(txt) 


            /*
if(#f){
                wb.clear();
	
	            p = '\r\n\r\n---\r\n\r\n' + string.load(f[1]);// 加载文件内容

	            wb.system(  p );
            }
*/

            /*返回 0 继续默认处理，文本放入控件，返回 _S_FALSE 阻止默认处理。*/
            return 0/*_S_FALSE*/
        }

        return 0; 
    }
)
wb.write("
<br><br>
# 欢迎使用社保卡知识查询助手 <br><br>                                                                

- 全面解答您的社保知识困惑，让您的社保查询变得简单快捷。

- 提供详尽的业务流程指导，确保社保服务的标准化和高效化。

- 专业的业务支持和政策解读，助力您更好地服务社会大众。 我们致力于成为您社保服务的得力助手。
")

mainForm.btnClear.oncommand = function(id,event){
	resetMessages();//清除聊天上下文
	mainForm.editPrompt.text = null
}

import key;
import win.clip;
mainForm.btnCopy.oncommand = function(id,event){
	var md = wb.lastMarkdown();
	if(!#md) return mainForm.msgboxErr("消息为空。");
	win.clip.write( md )
	}
//响应按键事件，输入用户提示词
mainForm.btnSend.oncommand = function(id,event){
	var prompt = mainForm.editPrompt.text;
	if(!#prompt){
		mainForm.msgboxErr("请在上面输入问题。"); 
		mainForm.editPrompt.setFocus();
		return;
	}
	//按钮显示等待动画
	mainForm.btnSend.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
	mainForm.btnClear.disabled = true;
	mainForm.btnCopy.disabled = true;
	mainForm.chkFix.disabled = true;
	
	wb.limit = config.msgLimit;
	
	/*
var assistantMsg = wb.lastAssistantMessage();
	if(assistantMsg){
		//Few-shot Learning
		assistantMsg.content = ide.aifix.markdown(assistantMsg.content,true);
	}
*/
	
	var knowledge = ""// 初始化临时知识库内容

	prompt = string.replace(prompt,"(<https?\://>?<S+\.>?\S+)\.\S+",
		function(url){
		
			url = url + ".md?v=1";
			wb.showLoading("正在读取："+url)
				
			var md = inet.http.get(url);
			if(md){
				md = '\r\n\r\n用户输入的参考网址：' + url 
					+  '\r\n\r\n下面是自该网址获取的 Markdown 格式文档或范例：'
					+  '\r\n\r\n' + md +'\r\n\r\n------------------------\r\n\r\n'
					
				knowledge = knowledge + md;//把用户输入的网址作为临时知识库进行查询，不过只支持md结尾的网址
				
			}
		});
	
	if(#knowledge){
		mainForm.chkFix.checked = false;
		mainForm.chkFix.oncommand();
		wb.system(knowledge);
		
	} 
	
	//输入 AI 提示词
	wb.prompt( prompt );
	mainForm.editPrompt.text = "";
	
	//创建多线程向服务端发送请求
	thread.invoke( 
		function(mainForm,wb,config){
			/*以前的库不支持tools这个参数，所以自己定义了一个newParams，后来升级不需要了
			var newParams = {tools= {{type = "retrieval"; retrieval = {knowledge_id = "1871063437791133696"}}}}; //设置为搜索知识库
			if(!mainForm.chkFix.checked){newParams = null}; //设置为空就是联网搜索
			
			var ok,err = client.messages(wb.chatMessage,function(deltaText){
				wb.assistant(deltaText);
			},newParams );
*/
			//if(!mainForm.chkFix.checked){config.tools = null}; //设置为空就是联网搜索
			// 如果 chkFix 不是选择状态,移除 tools 中的第一个元素
			/*
if (!mainForm.chkFix.checked) {
    			table.remove(config.tools, 1); // 移除第一个元素
			}
*/

			for(k,v in config){ 
				if(v=="")config[k] = null;
				
			} 
			mainForm.msgbox(config.tools)	
			//导入调用 HTTP 接口的 REST 客户端
			import web.rest.aiChat;
			var client = web.rest.aiChat(config);
			
			var ok,err = client.messages(wb.chatMessage,function(deltaText){
			wb.assistant(deltaText);
			});
			
			if(err){
				//获取错误对象（解析 JSON 格式的错误信息）
				var errObject = client.lastResponseError()
				if(errObject[["error"]][["type"]] == "authentication_error" ){
					wb.errorMessage(`API 密钥错误！<a href="https://bigmodel.cn/usercenter/proj-mgmt/apikeys">点这里获取密钥</a>，&nbsp;<a href="javascript:void(0)" onclick="javascript:external.updateApiKey()">点这里设置新密钥</a>`)
				}
				else {
					wb.errorMessage(err)
				}
			}  
			 
		},mainForm,wb,config//将参数传入线程
	)
}

//在 AI 回复结束后回调此函数
wb.onWriteEnd = function(){
	mainForm.btnSend.disabledText = null;//关闭等待动画
	mainForm.btnClear.disabled = false;
	mainForm.btnCopy.disabled = false;
	mainForm.chkFix.disabled = false;
	// 在 AI 回复结束后,确保在 wb.chatMessage 末尾添加两个空行
	// 在回复结束后回调虽然也能添加空行，但会造成内容区域不能直接到底部，要靠滑杆往下拉才行
    //wb.assistant("<br><br>作者：snai9");
    mainForm.editPrompt.setFocus();
}

//在 AI 回复结束以前回调此函数，自动修正 aardio 代码块中的常见幻觉错误
//确保在 wb.chatMessage 末尾添加两个空行,以免被【复制】遮挡住
import ide.aifix;
wb.beforerWriteEnd = function(markdown){
	////markdown = markdown ++ '<br><br> <div style="text-align: right;">当阳人社局 信息中心</div>',不用pushMessage就只能添加字符串消息; 
	//pushMessage可以添加消息对象，但return markdown会造成添加的消息出现两次；
	//pushMessage使用return ide.aifix.markdown(markdown,true)时，如果没有添加消息，会造成消息传递不结束，所以加了判断
	var yd = '<br><br> <div style="text-align: right;">当阳人社局 信息中心</div>';
	// 判断 yd 是否有内容
    if (yd) {
        wb.pushMessage(yd);
        return ide.aifix.markdown(markdown, true);
    } else {
        return markdown;
    }
	
	
}

mainForm.editPrompt.onOk = function(ctrl,alt,shift){ 
	if(ctrl){
		mainForm.btnSend.oncommand()
		return true; 
	}
		
}


//默认设置输入框焦点



mainForm.editPrompt.setFocus();


mainForm.show();
win.loopMessage();